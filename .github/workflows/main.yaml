name: Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ env.REPOSITORY_NAME }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Init python/poetry environment
        uses: ./.github/actions/setup-poetry-env

      - name: Run pre-commit
        run: poetry run pre-commit run -a --show-diff-on-failure
      
      - name: Inspect dependencies
        run: poetry run deptry .

      - name: Check Poetry lock file consistency
        run: poetry lock --check
      
      - name: black
        run: poetry run black --check ./hitfactorpy ./tests
      
      - name: flake8
        run: poetry run flake8 ./hitfactorpy ./tests
      
      - name: isort
        run: poetry run isort --check ./hitfactorpy ./tests
  
  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: ~/.mypy_cache
          key: mypy-cache-${{ env.REPOSITORY_NAME }}-${{ hashFiles('pyproject.toml') }}
      
      - name: Init python/poetry environment
        uses: ./.github/actions/setup-poetry-env

      - run: poetry run mypy ./hitfactorpy ./tests

  tox:
    needs:
      - quality
      - typecheck
    strategy:
      matrix:
        platform: 
          - ubuntu-latest
          - macos-latest
          # - windows-latest
        python-version: ['3.10', '3.11']
      fail-fast: true
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions

      - name: Test with tox
        run: tox
        env:
          PLATFORM: ${{ matrix.platform }}
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  check-docs:
    needs:
      - quality
      - typecheck
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env
      
      - name: Install docs dependencies group
        run: poetry install --no-interaction --with docs
        shell: bash

      - name: Check if documentation can be built
        run: poetry run mkdocs build -s
